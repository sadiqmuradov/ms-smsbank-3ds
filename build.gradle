buildscript {
    ext {
        springBootVersion = '2.0.2.RELEASE'
    }
    repositories {
        mavenCentral()
        mavenLocal()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id "org.sonarqube" version "2.6.2"
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

repositories {
    mavenCentral()
    mavenLocal()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
}

ext {
    springCloudVersion = 'Finchley.SR2'
}

// tag::xsd[]
task genJaxb {
    ext.sourcesDir = "src/main/generated-sources/jaxb"
    ext.classesDir = "${buildDir}/classes/jaxb"
    ext.schema = "src/main/resources/smsbank3ds.xsd"

    outputs.dir classesDir

    doLast() {
        project.ant {
            taskdef name: "xjc", classname: "com.sun.tools.xjc.XJCTask",
                    classpath: configurations.jaxb.asPath
            mkdir(dir: sourcesDir)
            mkdir(dir: classesDir)

            xjc(destdir: sourcesDir, schema: schema) {
                arg(value: "-wsdl")
                produces(dir: sourcesDir, includes: "**/*.java")
            }

            javac(destdir: classesDir, source: 1.6, target: 1.6, debug: true,
                    debugLevel: "lines,vars,source",
                    classpath: configurations.jaxb.asPath) {
                src(path: sourcesDir)
                include(name: "**/*.java")
                include(name: "*.java")
            }

            copy(todir: classesDir) {
                fileset(dir: sourcesDir, erroronmissingdir: false) {
                    exclude(name: "**/*.java")
                }
            }
        }
    }
}
// end::xsd[]

compileJava.dependsOn genJaxb

// tag::jaxb[]
configurations {
    jaxb
}

bootJar {
    from genJaxb.classesDir
}

group 'az.pashabank.apl'
version '0.0.1-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-data-rest')
    compile('org.springframework.boot:spring-boot-starter-jdbc') {
        exclude group: 'org.apache.tomcat', module: 'tomcat-jdbc'
    }
    compile('org.springframework.boot:spring-boot-starter-security')
    compile("org.springframework.boot:spring-boot-starter-web-services")
    compile("org.springframework.cloud:spring-cloud-starter-config")
    compile("org.springframework.security:spring-security-config:5.1.4.RELEASE")
    compile("org.springframework.security:spring-security-core:5.1.4.RELEASE")
    compile("org.springframework.security:spring-security-web:5.1.4.RELEASE")
    compile('org.projectreactor:reactor-spring:1.0.1.RELEASE')
    compile('io.projectreactor:reactor-core')
    compile('io.springfox:springfox-swagger-ui:2.8.0')
    compile('io.springfox:springfox-swagger2:2.8.0')
    compile('log4j:log4j:1.2.12')
    compile('commons-net:commons-net:3.5')
    compile('com.google.code.gson:gson:2.8.5')
//    compile('com.oracle:ojdbc7:12.1.0.1')
    compile('com.oracle.database.jdbc:ojdbc8:19.3.0.0')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile("wsdl4j:wsdl4j:1.6.3")
    jaxb("org.glassfish.jaxb:jaxb-xjc:2.2.11")
    compile(files(genJaxb.classesDir).builtBy(genJaxb))
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

configurations {
    bootJar.archiveName = 'ms-smsbank-3ds.jar'
}
